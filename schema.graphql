schema {
  query: Query
  mutation: Mutation
}

type Country @aws_api_key @aws_cognito_user_pools {
  code: ID!
  name: String
  native: String
  phone: String
}

type Language @aws_api_key @aws_cognito_user_pools {
  code: ID!
  name: String
  native: String
}

input SigninMobileInput {
  deviceId: String
}

input SignoutMobileInput {
  deviceId: String
}

input UpdateUserInput {
  firstName: String
  lastName: String
  country: String
  photo: String
  birthDate: String
  birthCountry: String
  birthCity: String
  gender: Gender
  usCitizen: Boolean
}

input InviteParentInput {
  email: String!
}

input CreateEventInput {
  title: String
  description: String
  photo: String
  startDate: String
  endDate: String
  address: String
  activityType: String
  price: Float
  targetClubs: [String]
  targetTeams: [String]
}

input UpdateEventInput {
  id: ID!
  title: String
  description: String
  photo: String
  startDate: String
  endDate: String
  address: String
  activityType: String
  price: Float
  targetClubs: [String]
  targetTeams: [String]
}

type SigninMobilePayload {
  errors: [String]
}

type SignoutMobilePayload {
  errors: [String]
}

type UpdateUserPayload {
  errors: [String]
  user: User
}

type InviteParentPayload {
  errors: [String]
}

type CreateEventPayload {
  errors: [String]
  event: Event
}

type UpdateEventPayload {
  errors: [String]
  event: Event
}

enum Gender {
  M
  F
}

type Image {
  url: String
}

type User {
  firstName: String
  lastName: String
  country: String
  photo: Image
  birthDate: String
  birthCountry: String
  birthCity: String
  gender: Gender
  usCitizen: Boolean
}

type Event {
  id: ID!
  title: String
  description: String
  photo: Image
  startDate: String
  endDate: String
  address: String
  activityType: String
  price: Float
  likes: Int
  views: Int
}

type Mutation {
  signinMobile(input: SigninMobileInput!): SigninMobilePayload
  signoutMobile(input: SignoutMobileInput!): SignoutMobilePayload
  updateUser(input: UpdateUserInput!): UpdateUserPayload!
  inviteParent(input: InviteParentInput!): InviteParentPayload!
  createEvent(input: CreateEventInput!): CreateEventPayload!
  updateEvent(input: UpdateEventInput!): UpdateEventPayload!
}

type Query {
  countries: [Country!] @aws_api_key @aws_cognito_user_pools
  languages: [Language!] @aws_api_key @aws_cognito_user_pools
  """
  Get direct link to upload user files
  """
  uploadUrl(type: String!, fileName: String!): String

  """
  Get current logged user
  """
  me: User!
}

